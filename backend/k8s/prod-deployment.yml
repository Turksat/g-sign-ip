apiVersion: apps/v1
kind: Deployment
metadata:
  name: gsign-server
  namespace: gsign
spec:
  replicas: 2
  selector:
    matchLabels:
      app: gsign-server
  template:
    metadata:
      labels:
        app: gsign-server
    spec:
      # affinity:
      #   podAntiAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #     - labelSelector:
      #         matchExpressions:
      #         - key: app
      #           operator: In
      #           values:
      #           - gsign-server
      #       topologyKey: "kubernetes.io/hostname"
      volumes:
      - name: pinpoint-logs-dir
        emptyDir: {}
      # - name: logs-dir
      #   hostPath:
      #     path: /var/log/edk
      #     type: DirectoryOrCreate
      containers:
      - name: gsign-server
        image: $TAG
        imagePullPolicy: Always
        env:
          - name: NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: SPRING_PROFILES_ACTIVE
            value: $PROFILE
          - name: TZ
            value: Europe/Istanbul
          - name: JAVA_OPTS
            value: >-
              -Dpinpoint.applicationName=gsign
              -Dpinpoint.agentName=gsign
              -Dpinpoint.container=gsign
              -javaagent:/app/pinpoint-agent/pinpoint-bootstrap.jar
              -Dprofiler.transport.grpc.collector.ip=XXXXXX
              -Dprofiler.collector.ip=XXXXXX
              -Dprofiler.uri.stat.enable=true
              -Dprofiler.uri.stat.spring.webmvc.enable=true
              -Dprofiler.exceptiontrace.enable=true
              -Dprofiler.exceptiontrace.new.throughput=1000
              -Dprofiler.exceptiontrace.errormessage.max=2048
              -Dprofiler.exceptiontrace.max.depth=5
              -Dprofiler.exceptiontrace.io.buffering.buffersize=20
              -Djava.awt.headless=true
              -Djava.security.egd=file:/dev/./urandom
              -Dsun.net.client.defaultReadTimeout=10000
              -Djavax.servlet.request.encoding=UTF-8
              -Duser.timezone=Europe/Istanbul
              -Dsun.net.client.defaultConnectTimeout=1000
              -Dfile.encoding=UTF-8 
              -DEDEV_CONFIG_HOME=/opt/eDevlet-Config
              -DEDEVLET_CONFIG_HOME=/opt/eDevlet-Config
              -Dcom.sun.management.jmxremote
              -Dcom.sun.management.jmxremote.port=7676
              -Dcom.sun.management.jmxremote.rmi.port=7676
              -Dcom.sun.management.jmxremote.authenticate=false
              -Dcom.sun.management.jmxremote.ssl=false
              -DEDEVLET_ENV=PROD
              -Dspring.profiles.active=prod
          - name: GSIGN_PROD_DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: spring-gsign-secret
                key: GSIGN_PROD_DB_PASSWORD
          - name: GSIGN_PROD_DB_URL
            valueFrom:
              secretKeyRef:
                name: spring-gsign-secret
                key: GSIGN_PROD_DB_URL
          - name: GSIGN_PROD_DB_USERNAME
            valueFrom:
              secretKeyRef:
                name: spring-gsign-secret
                key: GSIGN_PROD_DB_USERNAME
        ports:
        - containerPort: 9005
        imagePullPolicy: Always
        resources:
          limits:
            cpu: '4'
            memory: 8Gi
          requests:
            cpu: '2'
            memory: 4Gi
        volumeMounts:
          - name: pinpoint-logs-dir
            mountPath: /app/pinpoint-agent/logs
          # - name: logs-dir
          #   mountPath: /var/log/edk
          #   subPathExpr: $(NAME)
        securityContext:
          runAsNonRoot: true
          runAsUser: 10014
          runAsGroup: 10014
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
      imagePullSecrets:
        - name: git-regcred
      automountServiceAccountToken: false
      # initContainers:
      #   - name: my-init
      #     image: docker-shared.turksat.com.tr/busybox:1.37
      #     command: ["/bin/sh","-c","chown -R 10014:10014 var/log/edk && touch var/"]
      #     env:
      #       - name: NAME
      #         valueFrom:
      #           fieldRef:
      #             apiVersion: v1
      #             fieldPath: metadata.name
      #     securityContext:
      #       allowPrivilegeEscalation: true
      #       seccompProfile:
      #         type: RuntimeDefault
      #     volumeMounts:
      #      - name: logs-dir
      #        mountPath: /var/log/edk
      #        subPathExpr: $(NAME)

